transform(career = factor(career, levels = c("不明", "就職", "進学"))) %>%
ggplot(aes(x = faculty, y = Freq, fill = career)) +
geom_bar(stat = "identity", alpha = 0.5) +
scale_fill_manual(values = c("#00C7FF", "#FF00FF", "#00FF77")) -> g
#  scale_x_discrete(limits = c("理学部", "工学部", "法学部", "文学部"))  -> g
plot(g)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/visualization/barGraph.R', echo=TRUE)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/visualization/barGraph.R', echo=TRUE)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/visualization/barGraph.R', echo=TRUE)
q()
source('~/.active-rstudio-document', echo=TRUE)
raw.df = read_csv("../hours_of_exercise.csv")
raw.df = read_csv("../../hours_of_exercise.csv")
raw.df = read_csv("../../hours_of_exercise.csv", fileEncoding = "CP932")
? read_csv
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2)
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2)
View(raw.df)
View(raw.df)
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子")) -> hours.df
View(hours.df)
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))
View(raw.df)
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
filter(中学生男子 != is.na)
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything())
View(raw.df)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/visualization/hist.R', echo=TRUE)
View(raw.df)
hist(hours.df)
hist(hours.df$中学生男子)
View(hours.df)
hours.df[[1]]
class(hours.df[[1]])
hours.df[. 1]
hours.df[, 1]
names(hours.df)
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything()) %>%
rename(hours = "1週間の総運動時間（分）") %>% hours.df
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything()) %>%
rename(hours = "1週間の総運動時間（分）") -> hours.df
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything()) %>%
rename(freq = "中学生男子")
rename(hours = "1週間の総運動時間（分）") -> hours.df
hist(hours.df$中学生男子)
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything()) %>%
rename(freq = "中学生男子") %>%
rename(hours = "1週間の総運動時間（分）") -> hours.df
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything()) %>%
rename(freq = "中学生男子") %>%
rename(hours = "1週間の総運動時間（分）") %>%
transform(hours = as.numeric(hours)) -> hours.df
freq.vec <- function(csv) {
# 与えられた度数分布のCSVからhist関数に与えるベクトルを取得する
# 引数:
#   csv: 1カラム目が変数、2カラム目が頻度となるCSVファイル
#   xs, xe: それぞれ変数の下限と上限（与えなかった場合は変数の最小値と最大値を利用する）
# 返り値:
#   変数値が頻度の数だけ繰り返されたベクトル
d <- read.csv(csv)
vars <- d[[1]]
xs <- ifelse(xs == 0, min(vars), xs)
xe <- ifelse(xe == 0, max(vars), xe)
d.ext <- d[vars >= xs & vars <= xe, ]
rep(d.ext[[1]], d.ext[[2]])
}
freq.vec = function(csv, xs = 0, xe = 0) {
# 与えられた度数分布のCSVからhist関数に与えるベクトルを取得する
# 引数:
#   csv: 1カラム目が変数、2カラム目が頻度となるCSVファイル
#   xs, xe: それぞれ変数の下限と上限（与えなかった場合は変数の最小値と最大値を利用する）
# 返り値:
#   変数値が頻度の数だけ繰り返されたベクトル
d <- read.csv(csv)
vars <- d[[1]]
xs <- ifelse(xs == 0, min(vars), xs)
xe <- ifelse(xe == 0, max(vars), xe)
d.ext <- d[vars >= xs & vars <= xe, ]
rep(d.ext[[1]], d.ext[[2]])
}
freq.fun = function(csv, xs = 0, xe = 0) {
# 与えられた度数分布のCSVからhist関数に与えるベクトルを取得する
# 引数:
#   csv: 1カラム目が変数、2カラム目が頻度となるCSVファイル
#   xs, xe: それぞれ変数の下限と上限（与えなかった場合は変数の最小値と最大値を利用する）
# 返り値:
#   変数値が頻度の数だけ繰り返されたベクトル
d <- read.csv(csv)
vars <- d[[1]]
xs <- ifelse(xs == 0, min(vars), xs)
xe <- ifelse(xe == 0, max(vars), xe)
d.ext <- d[vars >= xs & vars <= xe, ]
rep(d.ext[[1]], d.ext[[2]])
}
freq.vec = freq.fun(hours.df)
freq.fun = function(csv, xs = 0, xe = 0) {
# 与えられた度数分布のCSVからhist関数に与えるベクトルを取得する
# 引数:
#   csv: 1カラム目が変数、2カラム目が頻度となるCSVファイル
#   xs, xe: それぞれ変数の下限と上限（与えなかった場合は変数の最小値と最大値を利用する）
# 返り値:
#   変数値が頻度の数だけ繰り返されたベクトル
d <- csv
vars <- d[[1]]
xs <- ifelse(xs == 0, min(vars), xs)
xe <- ifelse(xe == 0, max(vars), xe)
d.ext <- d[vars >= xs & vars <= xe, ]
rep(d.ext[[1]], d.ext[[2]])
}
# 文部科学省「平成21年度全国体力・運動能力，運動週間等調査結果について」
# https://www8.cao.go.jp/youth/whitepaper/h23honpenhtml/html/zuhyo/zu1118.html
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything()) %>%
rename(freq = "中学生男子") %>%
rename(hours = "1週間の総運動時間（分）") %>%
transform(hours = as.numeric(hours)) -> hours.df
freq.vec = freq.fun(hours.df)
freq.vec
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything()) %>%
rename(freq = "中学生男子") %>%
rename(hours = "1週間の総運動時間（分）") %>%
transform(hours = as.numeric(hours)) %>%
mutate(freq = freq * 10)-> hours.df
freq.vec = freq.fun(hours.df)
hist(freq.vec)
hist(freq.vec, breaks = seq(0, 2400, 60))
hist(freq.vec, breaks = seq(0, 2400, 180))
hist(freq.vec, breaks = seq(0, 2400, 120))
hist(freq.vec, breaks = seq(0, 2400, 300))
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/visualization/hist.R', echo=TRUE)
hist(freq.vec, breaks = seq(0, 2400,  200))
hist(freq.vec, breaks = seq(0, 2400,  300))
hist(freq.vec, breaks = seq(0, 2400, 60))
hist(freq.vec, breaks = seq(0, 2400,  300))
q()
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/visualization/hist.R', echo=TRUE)
freq.vec = freq.fun(hours.df) + 1
hist(freq.vec, breaks = seq(0, 2400, 60))
hist(freq.vec, breaks = seq(0, 2400,  300))
freq.vec = freq.fun(hours.df) + 1
hist(freq.vec, breaks = seq(0, 2460, 60))
hist(freq.vec, breaks = seq(0, 2460,  300))
min(freq.vec)
max(freq.vec)
freq.vec = freq.fun(hours.df) + 1
hist(freq.vec, breaks = seq(0, 2700, 60))
hist(freq.vec, breaks = seq(0, 2700,  300))
freq.vec = freq.fun(hours.df)
hist(freq.vec, breaks = seq(0, 2400, 60))
hist(freq.vec, breaks = seq(0, 2400,  300))
freq.vec = freq.fun(hours.df)
freq.ratio = freq.vec / sum(freq.vec)
hist(freq.ratio, breaks = seq(0, 2400, 60))
hist(freq.ration, breaks = seq(0, 2400,  300))
hist(freq.vec, breaks = seq(0, 2400, 60), ylab = "density")
ggplot(data = NULL, aes(y = freq.vec)) +
geom_histogram(binwidth = 4)
ggplot(data = NULL, aes(y = freq.vec)) +
geom_histogram(binwidth = 60)
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(binwidth = 60)
freq.vec = freq.fun(hours.df)
hist(freq.vec, breaks = seq(0, 2400, 60))
hist(freq.vec, breaks = seq(0, 2400,  300))
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(binwidth = 60)
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(binwidth = 60, fill = "white", colour = "black")
freq.vec = freq.fun(hours.df)
hist(freq.vec, breaks = seq(0, 2400, 60))
hist(freq.vec, breaks = seq(0, 2400,  300))
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(binwidth = 60, fill = "white", colour = "black")
sum(freq.vec < 60)
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2)
View(raw.df)
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(binwidth = 300, fill = "white", colour = "black")
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(y = stat(count) / sum(stat(count)), binwidth = 60, fill = "white", colour = "black")
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(y = ..count.. / sum(..count..), binwidth = 60, fill = "white", colour = "black")
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(y = stat(count), binwidth = 60, fill = "white", colour = "black")
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(binwidth = 60, fill = "white", colour = "black")
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/visualization/hist.R', echo=TRUE)
stat(count)
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(binwidth = 60, fill = "white", colour = "black") +
geom_text(aes(label = ..cont..))
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(binwidth = 60, fill = "white", colour = "black") +
geom_text(aes(label = ..count..))
rlang::last_error()
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(binwidth = 60, fill = "white", colour = "black") +
geom_text(aes(label = stat(count)))
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(binwidth = 60, fill = "white", colour = "black") +
geom_text(aes(label = stat(count)), stat = "bin")
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(y = stat(count), binwidth = 60, fill = "white", colour = "black")
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(y = after_stat(count), binwidth = 60, fill = "white", colour = "black")
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(aes(y = after_stat(count)), binwidth = 60, fill = "white", colour = "black")
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(aes(y = (after_stat(count) / sum(after_stat(count)))), binwidth = 60, fill = "white", colour = "black")
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(aes(y = (after_stat(count) / sum(after_stat(count)))),
binwidth = 60, fill = "white", colour = "black") +
scale_y_continuous(labels = percent)
pckg = "scales"
if(!require(pckg, character.only = TRUE)){
install.packages(pckg, type = "source")
if (!require(pckg, character.only = TRUE)){
str = paste0("could not install ", pckg)
stop(str)
}
}
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(aes(y = (after_stat(count) / sum(after_stat(count)))),
binwidth = 60, fill = "white", colour = "black") +
scale_y_continuous(labels = percent)
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(aes(y = (after_stat(count) / sum(after_stat(count)))),
binwidth = 60, fill = "white", colour = "black") +
scale_y_continuous(labels = percent) +
labs(x = "1週間の運動時間（分）", y = "")
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(aes(y = (after_stat(count) / sum(after_stat(count)))),
binwidth = 300, fill = "white", colour = "black") +
scale_y_continuous(labels = percent) +
labs(x = "1週間の運動時間（分）", y = "")
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/visualization/hist.R', echo=TRUE)
q()
q()
q()
# ヒストグラム
pckg = "tidyverse"
if(!require(pckg, character.only = TRUE)){
install.packages(pckg, type = "source")
if (!require(pckg, character.only = TRUE)){
str = paste0("could not install ", pckg)
stop(str)
}
}
pckg = "scales"
if(!require(pckg, character.only = TRUE)){
install.packages(pckg, type = "source")
if (!require(pckg, character.only = TRUE)){
str = paste0("could not install ", pckg)
stop(str)
}
}
par(family = "HiraKakuProN-W3")                     # plot() で日本語 on mac
theme_set(theme_grey(base_family = "HiraKakuProN-W3")) # ggplot で日本語
# 度数分布表からヒストグラムの作成
# https://qiita.com/ciela/items/4babc1a4567e2ca34811#b#
freq.fun = function(csv, xs = 0, xe = 0) {
# 与えられた度数分布のCSVからhist関数に与えるベクトルを取得する
# 引数:
#   csv: 1カラム目が変数、2カラム目が頻度となるCSVファイル
#   xs, xe: それぞれ変数の下限と上限（与えなかった場合は変数の最小値と最大値を利用する）
# 返り値:
#   変数値が頻度の数だけ繰り返されたベクトル
d <- csv
vars <- d[[1]]
xs <- ifelse(xs == 0, min(vars), xs)
xe <- ifelse(xe == 0, max(vars), xe)
d.ext <- d[vars >= xs & vars <= xe, ]
rep(d.ext[[1]], d.ext[[2]])
}
# 文部科学省「平成21年度全国体力・運動能力，運動週間等調査結果について」
# https://www8.cao.go.jp/youth/whitepaper/h23honpenhtml/html/zuhyo/zu1118.html
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything()) %>%
rename(freq = "中学生男子") %>%
rename(hours = "1週間の総運動時間（分）") %>%
transform(hours = as.numeric(hours)) %>%
mutate(freq = freq * 10)-> hours.df
freq.vec = freq.fun(hours.df)
ggplot(data = NULL, aes(x = freq.vec)) +
geom_histogram(aes(y = (after_stat(count) / sum(after_stat(count)))),
binwidth = 400, fill = "white", colour = "black") +
scale_y_continuous(labels = percent) +
labs(x = "1週間の運動時間（分）", y = "") -> g
plot(g)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/visualization/hist.R', echo=TRUE)
q()
mean(freq.vec)
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything()) %>%
rename(freq = "中学生男子") %>%
rename(hours = "1週間の総運動時間（分）") %>%
transform(hours = as.numeric(hours)) %>%
mutate(freq = freq * 10)-> hours.df
freq.vec = freq.fun(hours.df)
freq.fun = function(csv, xs = 0, xe = 0) {
# 与えられた度数分布のCSVからhist関数に与えるベクトルを取得する
# 引数:
#   csv: 1カラム目が変数、2カラム目が頻度となるCSVファイル
#   xs, xe: それぞれ変数の下限と上限（与えなかった場合は変数の最小値と最大値を利用する）
# 返り値:
#   変数値が頻度の数だけ繰り返されたベクトル
d <- csv
vars <- d[[1]]
xs <- ifelse(xs == 0, min(vars), xs)
xe <- ifelse(xe == 0, max(vars), xe)
d.ext <- d[vars >= xs & vars <= xe, ]
rep(d.ext[[1]], d.ext[[2]])
}
# 文部科学省「平成21年度全国体力・運動能力，運動週間等調査結果について」
# https://www8.cao.go.jp/youth/whitepaper/h23honpenhtml/html/zuhyo/zu1118.html
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything()) %>%
rename(freq = "中学生男子") %>%
rename(hours = "1週間の総運動時間（分）") %>%
transform(hours = as.numeric(hours)) %>%
mutate(freq = freq * 10)-> hours.df
freq.vec = freq.fun(hours.df)
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything()) %>%
rename(freq = "中学生男子") %>%
rename(hours = "1週間の総運動時間（分）") %>%
transform(hours = as.numeric(hours)) %>%
mutate(freq = freq * 10)-> hours.df
pckg = "tidyverse"
if(!require(pckg, character.only = TRUE)){
install.packages(pckg, type = "source")
if (!require(pckg, character.only = TRUE)){
str = paste0("could not install ", pckg)
stop(str)
}
}
pckg = "scales"
if(!require(pckg, character.only = TRUE)){
install.packages(pckg, type = "source")
if (!require(pckg, character.only = TRUE)){
str = paste0("could not install ", pckg)
stop(str)
}
}
par(family = "HiraKakuProN-W3")                     # plot() で日本語 on mac
theme_set(theme_grey(base_family = "HiraKakuProN-W3")) # ggplot で日本語
# 度数分布表からヒストグラムの作成
# https://qiita.com/ciela/items/4babc1a4567e2ca34811#b#
freq.fun = function(csv, xs = 0, xe = 0) {
# 与えられた度数分布のCSVからhist関数に与えるベクトルを取得する
# 引数:
#   csv: 1カラム目が変数、2カラム目が頻度となるCSVファイル
#   xs, xe: それぞれ変数の下限と上限（与えなかった場合は変数の最小値と最大値を利用する）
# 返り値:
#   変数値が頻度の数だけ繰り返されたベクトル
d <- csv
vars <- d[[1]]
xs <- ifelse(xs == 0, min(vars), xs)
xe <- ifelse(xe == 0, max(vars), xe)
d.ext <- d[vars >= xs & vars <= xe, ]
rep(d.ext[[1]], d.ext[[2]])
}
# 文部科学省「平成21年度全国体力・運動能力，運動週間等調査結果について」
# https://www8.cao.go.jp/youth/whitepaper/h23honpenhtml/html/zuhyo/zu1118.html
raw.df = read_csv("../../hours_of_exercise.csv", skip = 2) %>%
select(-c("小学生男子", "小学生女子", "中学生女子"))  %>%
drop_na(everything()) %>%
rename(freq = "中学生男子") %>%
rename(hours = "1週間の総運動時間（分）") %>%
transform(hours = as.numeric(hours)) %>%
mutate(freq = freq * 10)-> hours.df
freq.vec = freq.fun(hours.df)
mean(freq.vec)
x0 = c(55, 56, 57, 58, 59, 60)
x1 = c(10, x0)
boxplot(x0)
boxplot(x1)
# 箱ひげ図
pckg = "tidyverse"
if(!require(pckg, character.only = TRUE)){
install.packages(pckg, type = "source")
if (!require(pckg, character.only = TRUE)){
str = paste0("could not install ", pckg)
stop(str)
}
}
par(family = "HiraKakuProN-W3")                     # plot() で日本語 on mac
theme_set(theme_grey(base_family = "HiraKakuProN-W3")) # ggplot で日本語
skew.df = read_csv("../mean/skewedDist.vec")
sym.df = read_csv("../mean/symDist.csv")
View(skew.df)
View(sym.df)
boxplot(skew.df$val)
boxplot(sym.df$amount_of_saving)
range(skew.df$val)
skew.df = read_csv("../mean/amountSaving.vec")
sym.df = read_csv("../mean/symDist.csv")
skew.df = read_csv("../mean/amountSaving.csv")
sym.df = read_csv("../mean/symDist.csv")
boxplot(skew.df$val)
boxplot(sym.df$amount_of_saving)
range(skew.df$amount_of_saving)
boxplot(skew.df$amount_of_saving)
boxplot(sym.df$amount_of_saving)
sum(sym.df$amount_of_saving < 0)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/visualization/boxPlot.R', echo=TRUE)
range(skew.df$amount_of_saving)
range(sym.df$amount_of_saving)
sym.df = read_csv("../mean/symDist.csv")
boxplot(skew.df$amount_of_saving)
boxplot(sym.df$amount_of_saving)
range(sym.df$amount_of_saving)
x = rlnorm(n = 100, meanlog = 3, sdlog = 1)
hist(x)
boxplot(x)
x =rnorm(n = 100)
hist(x)
boxplot(x)
x = rlnorm(n = 100, meanlog = 3, sdlog = 1)
x =rnorm(n = 100)
x = c(x, rnorm(n = 5, mean = 2, sd = 1))
hist(x)
boxplot(x)
ggplot(data = NULL, aes(y = explain.vec))
x =rnorm(n = 100)
explain.vec = c(x, rnorm(n = 5, mean = 2, sd = 1))
ggplot(data = NULL, aes(y = explain.vec))
ggplot(data = NULL, aes(y = explain.vec)) +
geom_boxplot()
ggplot(data = NULL, aes(y = explain.vec)) +
geom_boxplot() +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
ggplot(data = NULL, aes(y = explain.vec)) +
geom_boxplot() +
theme(axis.title = element_blank(),
axis.x.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
ggplot(data = NULL, aes(y = explain.vec)) +
geom_boxplot() +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
View(skew.df)
names(skew.df)
skew.df = read_csv("../mean/amountSaving.csv")
sym.df = read_csv("../mean/symDist.csv")
data.frame(skew = skew.df$amount_of_saving,
sym = sym.df$amount_of_saving) %>%
pivot_longer(cols = c('skew', 'sym'), names_to = "dist", values_to = "val") ->
saving.df
View(saving.df)
ggplot(data = saving.df, aes(x = dist, y = val) +
geom_boxplot() +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
ggplot(data = saving.df, aes(x = dist, y = val)) +
geom_boxplot() +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/visualization/boxPlot.R', echo=TRUE)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/visualization/boxPlot.R', echo=TRUE)
ggplot(data = NULL, aes(y = explain.vec)) +
geom_boxplot(width = 0.5) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
ggplot(data = saving.df, aes(x = dist, y = val)) +
geom_boxplot(width = 0.5) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
dev.off()
ggplot(data = NULL, aes(y = explain.vec)) +
geom_boxplot(width = 0.1) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
q()
