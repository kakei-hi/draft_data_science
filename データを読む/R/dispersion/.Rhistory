curve(dnorm(x),
add = TRUE)
hist(t.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(-5, 5, 20))
hist(t.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(-5, 5, 0.5))
t/max = max(t.vec)
t.min = min(t.vec)
hist(t.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
t.max = max(t.vec)
t.min = min(t.vec)
hist(t.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
t.max = max(t.vec) + 0.1
t.min = min(t.vec) - 0.1
hist(t.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
t.max = max(t.vec) + 1
t.min = min(t.vec) - 1
hist(t.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
t.max = max(t.vec) + 1
t.min = min(t.vec) - 1
hist(t.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
curve(dnorm(x),
add = TRUE)
size.t = 1000
size.g = 10000000
t.vec = rt(n = size.t, df = 2, ncp = 0)
gauss.vec = rnorm(n = size.g)
t.max = max(t.vec) + 1
t.min = min(t.vec) - 1
hist(t.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
curve(dnorm(x),
add = TRUE)
size.t = 1000
size.g = 10000000
t.vec = rt(n = size.t, df = 6, ncp = 0)
t.max = max(t.vec) + 1
t.min = min(t.vec) - 1
hist(t.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
curve(dnorm(x), add = TRUE)
size.t = 1000
size.g = 10000000
t.vec = rt(n = size.t, df = 0.5, ncp = 0)
t.max = max(t.vec) + 1
t.min = min(t.vec) - 1
hist(t.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
curve(dnorm(x), add = TRUE)
size.t = 1000
size.g = 10000000
t.vec = rt(n = size.t, df = 1, ncp = 0)
gauss.vec = rnorm(n = size.g)
t.max = max(t.vec) + 1
t.min = min(t.vec) - 1
hist(t.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
curve(dnorm(x), add = TRUE)
rlaplace = function(n){
u = log(runif(n))
v = ifelse(runif(n) > 1 / 2, 1, -1)
return(u * v)
}
t.max = max(laplace.vec) + 1
t.min = min(laplace.vec) - 1
hist(laplace.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
laplace.vec = rlaplace(size.t)
hist(laplace.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
t.max = max(laplace.vec) + 1
t.min = min(laplace.vec) - 1
hist(laplace.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
curve(dnorm(x), add = TRUE)
size.t = 10000
size.g = 10000000
t.vec = rt(n = size.t, df = 1, ncp = 0)
laplace.vec = rlaplace(size.t)
gauss.vec = rnorm(n = size.g)
t.max = max(t.vec) + 1
t.min = min(t.vec) - 1
hist(t.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
curve(dnorm(x), add = TRUE)
t.max = max(laplace.vec) + 1
t.min = min(laplace.vec) - 1
hist(laplace.vec, prob = T, xlim = c(-5, 5), ylim = c(0, 0.4), breaks = seq(t.min, t.max, 0.5))
curve(dnorm(x), add = TRUE)
size.t = 10000
size.g = 10000000
t.vec = rt(n = size.t, df = 1, ncp = 0)
laplace.vec = rlaplace(size.t)
gauss.vec = rnorm(n = size.g)
g = ggplot(data = data.frame(X = c(-5, 5))) + xlim(-5, 5)
g = g + stat_function(fun = dnorm, colour = "blue")
g = g + stat_function(fun = dt, args = list(df = 1, ncp = 0), colour = "green")
plot(g)
g = ggplot(data = data.frame(X = c(-10, 10))) + xlim(-10, 10)
g = g + stat_function(fun = dnorm, colour = "blue")
g = g + stat_function(fun = dt, args = list(df = 1, ncp = 0), colour = "green")
plot(g)
g = ggplot(data = data.frame(X = c(-10, 10))) + xlim(-10, 10)
g = g + stat_function(fun = dnorm, colour = "blue")
g = g + stat_function(fun = dt, args = list(df = 1, ncp = 0), colour = "green")
g = g + stat_function(fun = dcauchy, args = list(location = 0, scale = 1, colour = "red"))
plot(g)
g = ggplot(data = data.frame(X = c(-10, 10))) + xlim(-10, 10)
g = g + stat_function(fun = dnorm, colour = "blue")
g = g + stat_function(fun = dt, args = list(df = 1, ncp = 0), colour = "green")
g = g + stat_function(fun = dcauchy, args = list(location = 0, scale = 1), colour = "red")
plot(g)
g = ggplot(data = data.frame(X = c(-10, 10))) + xlim(-10, 10)
g = g + stat_function(fun = dnorm, colour = "blue")
g = g + stat_function(fun = dt, args = list(df = 1, ncp = 0), colour = "green")
g = g + stat_function(fun = dcauchy, args = list(location = 0, scale = 5), colour = "red")
plot(g)
g = ggplot(data = data.frame(X = c(-10, 10))) + xlim(-10, 10)
g = g + stat_function(fun = dnorm, colour = "blue")
# g = g + stat_function(fun = dt, args = list(df = 1, ncp = 0), colour = "green")
g = g + stat_function(fun = dlogis, args = list(location = 0, scale = 5), colour = "green")
g = g + stat_function(fun = dcauchy, args = list(location = 0, scale = 5), colour = "red")
plot(g)
g = ggplot(data = data.frame(X = c(-10, 10))) + xlim(-10, 10)
g = g + stat_function(fun = dnorm, colour = "blue")
# g = g + stat_function(fun = dt, args = list(df = 1, ncp = 0), colour = "green")
# g = g + stat_function(fun = dlogis, args = list(location = 0, scale = 5), colour = "green")
g = g + stat_function(fun = dweibull, args = list(location = 0, scale = 5), colour = "green")
g = g + stat_function(fun = dcauchy, args = list(location = 0, scale = 5), colour = "red")
plot(g)
g = ggplot(data = data.frame(X = c(-10, 10))) + xlim(-10, 10)
g = g + stat_function(fun = dnorm, args = list(mean = 0, sd = 1.5), colour = "blue")
# g = g + stat_function(fun = dt, args = list(df = 1, ncp = 0), colour = "green")
# g = g + stat_function(fun = dlogis, args = list(location = 0, scale = 5), colour = "green")
g = g + stat_function(fun = rlaplace, args = list(n = 5), colour = "green")
g = g + stat_function(fun = dcauchy, args = list(location = 0, scale = 5), colour = "red")
plot(g)
g = ggplot(data = data.frame(X = c(-10, 10))) + xlim(-10, 10)
g = g + stat_function(fun = dnorm, args = list(mean = 0, sd = 1.5), colour = "blue")
g = g + stat_function(fun = dt, args = list(df = 15, ncp = 0), colour = "green")
# g = g + stat_function(fun = dlogis, args = list(location = 0, scale = 5), colour = "green")
g = g + stat_function(fun = dcauchy, args = list(location = 0, scale = 5), colour = "red")
plot(g)
g = ggplot(data = data.frame(X = c(-10, 10))) + xlim(-10, 10)
g = g + stat_function(fun = dnorm, args = list(mean = 0, sd = 1.5), colour = "blue")
g = g + stat_function(fun = dt, args = list(df = 20, ncp = 0), colour = "green")
# g = g + stat_function(fun = dlogis, args = list(location = 0, scale = 5), colour = "green")
g = g + stat_function(fun = dcauchy, args = list(location = 0, scale = 5), colour = "red")
plot(g)
g = ggplot(data = data.frame(X = c(-10, 10))) + xlim(-10, 10)
g = g + stat_function(fun = dnorm, args = list(mean = 0, sd = 1.5), colour = "blue")
g = g + stat_function(fun = dt, args = list(df = 15, ncp = 0), colour = "green")
# g = g + stat_function(fun = dlogis, args = list(location = 0, scale = 5), colour = "green")
g = g + stat_function(fun = dcauchy, args = list(location = 0, scale = 5), colour = "red")
plot(g)
g = ggplot(data = data.frame(X = c(-10, 10))) + xlim(-10, 10)
g = g + stat_function(fun = dnorm, args = list(mean = 0, sd = 1.5), colour = "blue")
g = g + stat_function(fun = dt, args = list(df = 30, ncp = 0), colour = "green")
# g = g + stat_function(fun = dlogis, args = list(location = 0, scale = 5), colour = "green")
g = g + stat_function(fun = dcauchy, args = list(location = 0, scale = 5), colour = "red")
plot(g)
g = ggplot(data = data.frame(X = c(-10, 10))) + xlim(-10, 10)
g = g + stat_function(fun = dnorm, args = list(mean = 0, sd = 1.5), colour = "blue")
g = g + stat_function(fun = dt, args = list(df = 30, ncp = 0), colour = "green")
# g = g + stat_function(fun = dlogis, args = list(location = 0, scale = 5), colour = "green")
g = g + stat_function(fun = dcauchy, args = list(location = 0, scale = 5), colour = "red")
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
q()
cm = c(116.5,  122.6, 128.1, 133.5, 139.0, 145.2)
in = cm * 0.39370
m = cm / 100
cm = c(116.5,  122.6, 128.1, 133.5, 139.0, 145.2)
inch = cm * 0.39370
m = cm / 100
m[1]
height.df = data.frame(age = 6:11, cm = cm, inch = inch, m = m)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/dispersion/cov_cor.R', echo=TRUE)
mean(height.df$age)
mean(height.df$age)
mean(height.df$cm)
mean(height.df$inch)
n = nrow(height.df)
s_age = sqrt((n + 1) / n) * sd(height.df$age)
s_cm = sqrt((n + 1) / n) * sd(height.df$cm)
s_inch = sqrt((n + 1) / n) * sd(height.df$inch)
s_xy_C = cor(height.df$age, height.df$cm)
c_xy_inch = cor(height.df$age, height.df$inch)
s_xy_cm = cor(height.df$age, height.df$cm)
s_xy_inch = cor(height.df$age, height.df$inch)
cor(height.df$age, height.df$m)
mean(height.df$age)
mean(height.df$cm)
mean(height.df$inch)
# 標準偏差
n = nrow(height.df)
s_age = sqrt((n + 1) / n) * sd(height.df$age)
s_cm = sqrt((n + 1) / n) * sd(height.df$cm)
s_inch = sqrt((n + 1) / n) * sd(height.df$inch)
r_cm = s_xy_cm / (s_age * s_cm)
r_inch = s_xy_inch / (s_age * s_inch)
s_xy_cm = cov(height.df$age, height.df$cm)
s_xy_inch = cov(height.df$age, height.df$inch)
cov(height.df$age, height.df$m)
# 相関係数
cor(height.df$age, height.df$cm)
cor(height.df$age, height.df$inch)
cor(height.df$age, height.df$m)
mean(height.df$age)
mean(height.df$cm)
mean(height.df$inch)
# 標準偏差
n = nrow(height.df)
s_age = sqrt((n + 1) / n) * sd(height.df$age)
s_cm = sqrt((n + 1) / n) * sd(height.df$cm)
s_inch = sqrt((n + 1) / n) * sd(height.df$inch)
r_cm = s_xy_cm / (s_age * s_cm)
r_inch = s_xy_inch / (s_age * s_inch)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/dispersion/cov_cor.R', echo=TRUE)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/dispersion/cov_cor.R', echo=TRUE)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/dispersion/cov_cor.R', echo=TRUE)
d_cm = (height.df$cm - m_cm)
d2_cm = d_cm * d_cm
var_cm = sum(d2_cm) / n
s_cm = sqrt(var_cm)
d_inch = (height.df$inch - m_inch)
d_inch = (height.df$inch - m_inch)
d2_inch = d_inch * d_inch
var_inch = sum(d2_inch) / n
s_inch = sqrt(var_inch)
cm = c(116.5,  122.6, 128.1, 133.5, 139.0, 145.2)
inch = cm * 0.39370
m = cm / 100
height.df = data.frame(age = 6:11, cm = cm, inch = inch, m = m)
n = nrow(height.df)
m_age = mean(height.df$age)
m_cm = mean(height.df$cm)
m_inch = mean(height.df$inch)
# 共分散
d_age = (height.df$age - m_age)
d_cm = (height.df$cm - m_cm)
d_inch = (height.df$inch - m_inch)
s_xy_cm = sum(d_age * d_cm) / n
s_xy_inch = sum(d_age * d_inch) / n
# 共分散 相関係数
cm = c(116.5,  122.6, 128.1, 133.5, 139.0, 145.2)
inch = cm * 0.39370
m = cm / 100
height.df = data.frame(age = 6:11, cm = cm, inch = inch, m = m)
n = nrow(height.df)
m_age = mean(height.df$age)
m_cm = mean(height.df$cm)
m_inch = mean(height.df$inch)
# 共分散
d_age = (height.df$age - m_age)
d_cm = (height.df$cm - m_cm)
d_inch = (height.df$inch - m_inch)
s_xy_cm = sum(d_age * d_cm) / n
s_xy_inch = sum(d_age * d_inch) / n
# 相関係数
cor(height.df$age, height.df$cm)
cor(height.df$age, height.df$inch)
cor(height.df$age, height.df$m)
# 標準偏差
d2_age = d_age * d_age
var_age = sum(d2_age) / n
s_age = sqrt(var_age)
d2_cm = d_cm * d_cm
var_cm = sum(d2_cm) / n
s_cm = sqrt(var_cm)
d2_inch = d_inch * d_inch
var_inch = sum(d2_inch) / n
s_inch = sqrt(var_inch)
s_age = sqrt((n - 1) / n) * sd(height.df$age)
s_cm = sqrt((n - 1) / n) * sd(height.df$cm)
s_inch = sqrt((n - 1) / n) * sd(height.df$inch)
r_cm = s_xy_cm / (s_age * s_cm)
r_inch = s_xy_inch / (s_age * s_inch)
q()
pckg = "mvtnorm"
if(!require(pckg, character.only = TRUE)){
install.packages(pckg, type = "source")
if (!require(pckg, character.only = TRUE)){
str = paste0("could not install ", pckg)
stop(str)
}
}
mu = c(-1, 5)
sig1 = 1
sig2 = 2
r = 0.8
sig12 = r * sig1 * sig2
val_cov.mat = matrix(c(sig1^2, sig12, sig12, sig2^2))
v = rmvnorm(n = 50, mean = mu, sigma = val_cov.mat)
mu = c(-1, 5)
sig1 = 1
sig2 = 2
r = 0.8
sig12 = r * sig1 * sig2
val_cov.mat = matrix(c(sig1^2, sig12, sig12, sig2^2), nrow = 2)
v = rmvnorm(n = 50, mean = mu, sigma = val_cov.mat)
cor(v[1], v[2])
v[1]
cor(v[, 1], v[, 2])
pckg = "tidyverse"
if(!require(pckg, character.only = TRUE)){
install.packages(pckg, type = "source")
if (!require(pckg, character.only = TRUE)){
str = paste0("could not install ", pckg)
stop(str)
}
}
g = ggplot(data = v, aes(x = X, y = Y))
g = g + geom_point()
plot(g)
colnames(v) = c("X", "Y")
g = ggplot(data = v, aes(x = X, y = Y))
g = g + geom_point()
plot(g)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/dispersion/correlation.R', echo=TRUE)
g = ggplot(data = NULL, aes(x = v[, 1], y = v[, 2]))
g = g + geom_point()
plot(g)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/dispersion/correlation.R', echo=TRUE)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/dispersion/correlation.R', echo=TRUE)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/dispersion/correlation.R', echo=TRUE)
source('~/OneDrive - The University of Tokushima/cource/データサイエンス教科書/データを読む/R/dispersion/correlation.R', echo=TRUE)
# 相関なし
mu = c(-0, 0)
sig1 = 1
sig2 = 1
r = 0.01
sig12 = r * sig1 * sig2
val_cov.mat = matrix(c(sig1^2, sig12, sig12, sig2^2), nrow = 2)
v = rmvnorm(n = 50, mean = mu, sigma = val_cov.mat)
x = v[, 1]
y = v[, 2]
cor(x, y)
g = ggplot(data = NULL, aes(x = x, y = y))
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
x = runif(n = size.n, min = -5, max = 5)
y = x * x + rnorm(n = size.n, mean = 0, sd = 0.1)
cor(x, y)
g = ggplot(data = NULL, aes(x = x, y = y))
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
size.n = 50
x = runif(n = size.n, min = -5, max = 5)
y = x * x + rnorm(n = size.n, mean = 0, sd = 0.1)
cor(x, y)
g = ggplot(data = NULL, aes(x = x, y = y))
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
x = runif(n = size.n, min = -5, max = 5)
y = x * x + rnorm(n = size.n, mean = 0, sd = 0.5)
cor(x, y)
g = ggplot(data = NULL, aes(x = x, y = y))
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
x = runif(n = size.n, min = -5, max = 5)
y = x * x + rnorm(n = size.n, mean = 0, sd = 0.75)
cor(x, y)
g = ggplot(data = NULL, aes(x = x, y = y))
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
mu = c(-0, 0)
sig1 = 1
sig2 = 1
r = 0.01
sig12 = r * sig1 * sig2
val_cov.mat = matrix(c(sig1^2, sig12, sig12, sig2^2), nrow = 2)
v = rmvnorm(n = size.n, mean = mu, sigma = val_cov.mat)
x = v[, 1]
y = v[, 2]
cor(x, y)
g = ggplot(data = NULL, aes(x = x, y = y))
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
# 外れ値
x1.outlier = max(x) * 20
y1.outlier = mean(y) + (x1.outlier - mean(x))
x2.outlier = mean(x) - (x1.outlier - mean(x))
y2.outlier = mean(y) - (x1.outlier - mean(x))
x = c(x, x1.outlier, x2.outlier)
y = c(y, y1.outlier, y2.outlier)
cor(x, y)
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
mu = c(-0, 0)
sig1 = 1
sig2 = 1
r = 0.01
sig12 = r * sig1 * sig2
val_cov.mat = matrix(c(sig1^2, sig12, sig12, sig2^2), nrow = 2)
v = rmvnorm(n = size.n, mean = mu, sigma = val_cov.mat)
x = v[, 1]
y = v[, 2]
cor(x, y)
g = ggplot(data = NULL, aes(x = x, y = y))
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
# 外れ値
x1.outlier = max(x) * 10
y1.outlier = mean(y) + (x1.outlier - mean(x))
x2.outlier = mean(x) - (x1.outlier - mean(x))
y2.outlier = mean(y) - (x1.outlier - mean(x))
x = c(x, x1.outlier, x2.outlier)
y = c(y, y1.outlier, y2.outlier)
cor(x, y)
g = ggplot(data = NULL, aes(x = x, y = y))
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
# 相関なし
mu = c(-0, 0)
sig1 = 1
sig2 = 1
r = 0.01
sig12 = r * sig1 * sig2
val_cov.mat = matrix(c(sig1^2, sig12, sig12, sig2^2), nrow = 2)
v = rmvnorm(n = size.n, mean = mu, sigma = val_cov.mat)
x = v[, 1]
y = v[, 2]
cor(x, y)
g = ggplot(data = NULL, aes(x = x, y = y))
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
# 外れ値
x1.outlier = max(x) * 10
y1.outlier = mean(y) + (x1.outlier - mean(x))
x2.outlier = mean(x) - (x1.outlier - mean(x))
y2.outlier = mean(y) - (x1.outlier - mean(x))
# x = c(x, x1.outlier, x2.outlier)
# y = c(y, y1.outlier, y2.outlier)
x = c(x, x1.outlier)
y = c(y, y1.outlier)
cor(x, y)
g = ggplot(data = NULL, aes(x = x, y = y))
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
# 相関なし
mu = c(-0, 0)
sig1 = 1
sig2 = 1
r = 0.01
sig12 = r * sig1 * sig2
val_cov.mat = matrix(c(sig1^2, sig12, sig12, sig2^2), nrow = 2)
v = rmvnorm(n = size.n, mean = mu, sigma = val_cov.mat)
x = v[, 1]
y = v[, 2]
cor(x, y)
g = ggplot(data = NULL, aes(x = x, y = y))
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
# 外れ値
x1.outlier = max(x) * 5
y1.outlier = mean(y) + (x1.outlier - mean(x))
x2.outlier = mean(x) - (x1.outlier - mean(x))
y2.outlier = mean(y) - (x1.outlier - mean(x))
# x = c(x, x1.outlier, x2.outlier)
# y = c(y, y1.outlier, y2.outlier)
x = c(x, x1.outlier)
y = c(y, y1.outlier)
cor(x, y)
g = ggplot(data = NULL, aes(x = x, y = y))
g = g + geom_point()
g = g + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank())
plot(g)
